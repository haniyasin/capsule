* Capsule 
Это механизм абстрагирования исполнения javascript кода. Оболочка плюс некоторый api к ней, реализуя который на разных платформах можно запускать один и тот же код.

На каждой платформе создание капсулы происходит по своему, чтобы исполнить код в первой сознанной капсул, нужно
создать файл capsulated.js и уже в него писать код. А далее просто пользоваться предоставленным api.

```javascript
capsule.exec = function(code);
```

А теперь подробно.

** exec
Исполняет некоторый код в капсуле, предоставляя все модули капсулы как api. Также методы самой капсулы предоставляются, но уже без ссылки на сам объект капсулы, то есть вызывать можно в виде `exec`. По сути это аналог with, но который может гарантировать, что никакой глобальный контекст не просочится внутрь капсулы, то есть exec может переопределять браузерный document например.

** о модулях
capsule api - это прежде всего набор модулей, которые предоставляют доступ к тем или иным возможностям. На данный момет это -[[wiki/modules_home][модули]] 

Может существовать как множество модулей одного типа, так и ни одного. Каждый модуль реализует `stub`, в котором определены свойства, необходимые для этого типа модуля. 
После того, как получен `stub` некоторого типа и реализованы все методы, его регистрируют и модуль становится доступен в виде `capsule.type.modulename`, где type может быть например `timer`, а `modulename`, в случае nodejs - `node`. Таким образом получаем такой способ создания таймера:

```javascript
var timer = timer.node.create(function(){console.log('dfdf')}, 2000);
```

Для того, чтобы получит каркас того модуля, нужно сделать так:
`var stub = moduletype.stub;`
затем добавить реализацию
`stub.create = function(arg1){
}`
и зарегистрировать модуль:
moduletype.newmodulename = stub;

Модуль можно не только зарегистрировать, но и удалить, как обычный объект.
delete moduletype.modulename;

Каждый тип модуля имеет свой набор методов в заглушке, которые необходимо реализовать, чтобы получить рабочий
модуль. Это полностью аналогично понятию интерфейса в ООП. Просто апи капсулы сделано намеренно очень простым,
чтобы избежать сложностей в портировании капсулы в различные среды, тем более ограниченные.

